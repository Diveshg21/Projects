<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Stone Paper Scissors</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      font-family: Arial, sans-serif;
      background: #111;
      color: white;
      text-align: center;
    }

    h1 {
      font-size: 3rem;
      margin: 30px 0;
      animation: pop 2s infinite alternate ease-in-out;
      color: #ffcc00;
    }

    @keyframes pop {
      from { transform: scale(1); }
      to { transform: scale(1.1); }
    }

    .panel {
      display: none;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      gap: 20px;
    }

    .active {
      display: flex;
    }

    input {
      padding: 10px;
      font-size: 1.2rem;
      border-radius: 8px;
      border: none;
      text-align: center;
    }

    button {
      padding: 10px 20px;
      font-size: 1.2rem;
      border-radius: 8px;
      border: none;
      cursor: pointer;
      background-color: #007BFF;
      color: white;
    }

    button:hover {
      background-color: #3399ff;
    }

    .score-panel {
      font-size: 1.5rem;
    }

    .choices {
      display: flex;
      gap: 20px;
      font-size: 4rem;
      cursor: pointer;
      user-select: none;
    }

    .choices span {
      transition: transform 0.3s ease;
    }

    .choices span:hover {
      transform: scale(1.3);
    }

    .vs-panel {
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 3rem;
      gap: 50px;
    }

    .hand {
      font-size: 4rem;
    }

    #resultPopup, #winnerPopup {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: #222;
      color: #fff;
      padding: 30px 40px;
      border-radius: 12px;
      font-size: 2rem;
      display: none;
      z-index: 1000;
      box-shadow: 0 0 20px #00f;
    }

    #okBtn, #restartBtn {
      margin-top: 20px;
      padding: 8px 20px;
      font-size: 1.2rem;
      border: none;
      border-radius: 8px;
      background-color: #007BFF;
      color: white;
      cursor: pointer;
    }

    #okBtn:hover, #restartBtn:hover {
      background-color: #3399ff;
    }

    .blurred {
      pointer-events: none;
      opacity: 0.3;
      filter: blur(2px);
    }
  </style>
</head>
<body>

  <h1>Stone Paper Scissors</h1>

  <div id="startPanel" class="panel active">
    <input id="playerName" placeholder="Enter your name" />
    <input id="scoreLimit" placeholder="Score limit (e.g. 3)" type="number" min="1" />
    <button id="startGameBtn">Start Game</button>
  </div>

  <div id="gamePanel" class="panel">
    <div id="gameContent">
      <div class="score-panel">
        <span id="playerNameDisplay"></span>: <span id="playerScore">0</span> |
        Computer: <span id="computerScore">0</span>
      </div>

      <div class="choices">
        <span data-choice="rock">‚úäüèª</span>
        <span data-choice="paper">‚úãüèª</span>
        <span data-choice="scissors">‚úåüèª</span>
      </div>

      <div class="vs-panel">
        <div id="playerHand" class="hand">‚ùî</div>
        <div>VS</div>
        <div id="computerHand" class="hand">‚ùî</div>
      </div>
    </div>
  </div>

  <div id="resultPopup">
    <div id="resultMessage"></div>
    <button id="okBtn">OK</button>
  </div>

  <div id="winnerPopup">
    <div id="winnerMessage"></div>
    <button id="restartBtn">Restart</button>
  </div>

  <script>
    const startPanel = document.getElementById("startPanel");
    const gamePanel = document.getElementById("gamePanel");
    const playerNameInput = document.getElementById("playerName");
    const scoreLimitInput = document.getElementById("scoreLimit");
    const startGameBtn = document.getElementById("startGameBtn");

    const playerNameDisplay = document.getElementById("playerNameDisplay");
    const playerScoreSpan = document.getElementById("playerScore");
    const computerScoreSpan = document.getElementById("computerScore");
    const choices = document.querySelectorAll(".choices span");
    const playerHand = document.getElementById("playerHand");
    const computerHand = document.getElementById("computerHand");

    const resultPopup = document.getElementById("resultPopup");
    const resultMessage = document.getElementById("resultMessage");
    const okBtn = document.getElementById("okBtn");

    const winnerPopup = document.getElementById("winnerPopup");
    const winnerMessage = document.getElementById("winnerMessage");
    const restartBtn = document.getElementById("restartBtn");

    const gameContent = document.getElementById("gameContent");

    let playerScore = 0;
    let computerScore = 0;
    let scoreLimit = 3;

    const handEmojis = {
      rock: "‚úäüèª",
      paper: "‚úãüèª",
      scissors: "‚úåüèª"
    };

    const getComputerChoice = () => {
      const options = ["rock", "paper", "scissors"];
      return options[Math.floor(Math.random() * 3)];
    };

    const getResult = (player, computer) => {
      if (player === computer) return "It's a Draw!";
      if (
        (player === "rock" && computer === "scissors") ||
        (player === "paper" && computer === "rock") ||
        (player === "scissors" && computer === "paper")
      ) {
        playerScore++;
        return "You Won!";
      } else {
        computerScore++;
        return "Computer Won!";
      }
    };

    const showResultPopup = (message) => {
      resultMessage.textContent = message;
      resultPopup.style.display = "block";
    };

    const disableChoices = () => {
      choices.forEach(choice => choice.style.pointerEvents = "none");
    };

    const enableChoices = () => {
      choices.forEach(choice => choice.style.pointerEvents = "auto");
    };

    const checkWinner = () => {
      if (playerScore >= scoreLimit) {
        winnerMessage.textContent = `${playerNameInput.value} Wins the Game!`;
        winnerPopup.style.display = "block";
        gameContent.classList.add("blurred");
        disableChoices();
      } else if (computerScore >= scoreLimit) {
        winnerMessage.textContent = `Computer Wins the Game!`;
        winnerPopup.style.display = "block";
        gameContent.classList.add("blurred");
        disableChoices();
      }
    };

    startGameBtn.addEventListener("click", () => {
      const name = playerNameInput.value.trim();
      const limit = parseInt(scoreLimitInput.value);

      if (!name || isNaN(limit) || limit < 1) {
        alert("Please enter a valid name and score limit.");
        return;
      }

      playerScore = 0;
      computerScore = 0;
      scoreLimit = limit;
      playerScoreSpan.textContent = "0";
      computerScoreSpan.textContent = "0";
      playerNameDisplay.textContent = name;

      startPanel.classList.remove("active");
      gamePanel.classList.add("active");
      gameContent.classList.remove("blurred");
      enableChoices();
    });

    choices.forEach(choice => {
      choice.addEventListener("click", () => {
        const playerChoice = choice.getAttribute("data-choice");
        const computerChoice = getComputerChoice();

        playerHand.textContent = handEmojis[playerChoice];
        computerHand.textContent = handEmojis[computerChoice];

        const result = getResult(playerChoice, computerChoice);
        playerScoreSpan.textContent = playerScore;
        computerScoreSpan.textContent = computerScore;
        showResultPopup(result);
        checkWinner();
      });
    });

    okBtn.addEventListener("click", () => {
      resultPopup.style.display = "none";

      if (playerScore >= scoreLimit || computerScore >= scoreLimit) {
        winnerPopup.style.display = "block";
      }

      playerHand.textContent = "‚ùî";
      computerHand.textContent = "‚ùî";
    });

    restartBtn.addEventListener("click", () => {
      winnerPopup.style.display = "none";
      resultPopup.style.display = "none";
      gamePanel.classList.remove("active");
      startPanel.classList.add("active");
      playerNameInput.value = "";
      scoreLimitInput.value = "";
      playerHand.textContent = "‚ùî";
      computerHand.textContent = "‚ùî";
      gameContent.classList.remove("blurred");
      enableChoices();
    });
  </script>

</body>
</html>